{"version":3,"sources":["components/enrtyData.tsx","components/Carousel.tsx","App.tsx","index.tsx"],"names":["entryData","itemWidth","frameSize","step","animationDuration","initPosition","disabledNext","disabledPrev","Carousel","state","moveLeft","newPosition","maxShift","props","images","length","setState","moveRight","changeItemWidth","event","target","value","changeFrameSize","changeStep","changeAnimationDuration","this","className","style","transform","transition","width","map","image","src","alt","indexOf","height","type","onClick","disabled","htmlFor","id","name","onChange","min","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42bab7ce.chunk.js","sourcesContent":["export const entryData = {\n  itemWidth: 130,\n  frameSize: 3,\n  step: 3,\n  animationDuration: 1000,\n  initPosition: 0,\n  disabledNext: false,\n  disabledPrev: false,\n};\n","import React from 'react';\nimport './Carousel.scss';\nimport { entryData } from './enrtyData';\n\ntype Props = {\n  images: string[];\n};\n\ntype State = {\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  initPosition: number;\n  disabledNext: boolean;\n  disabledPrev: boolean;\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state = entryData;\n\n  moveLeft = () => {\n    const {\n      itemWidth,\n      frameSize,\n      step,\n      initPosition,\n    } = this.state;\n\n    const { images } = this.props;\n\n    const newPosition = initPosition + itemWidth * step;\n    const maxShift = (images.length - frameSize) * itemWidth;\n\n    if (newPosition > maxShift) {\n      this.setState({ initPosition: maxShift });\n      this.setState({ disabledNext: true });\n    } else {\n      this.setState({ initPosition: newPosition });\n      this.setState({ disabledPrev: false });\n    }\n  };\n\n  moveRight = () => {\n    const {\n      itemWidth,\n      step,\n      initPosition,\n    } = this.state;\n\n    const newPosition = initPosition - itemWidth * step;\n\n    if (newPosition < 0) {\n      this.setState({ initPosition: 0 });\n      this.setState({ disabledPrev: true });\n    } else {\n      this.setState({ initPosition: newPosition });\n      this.setState({ disabledNext: false });\n    }\n  };\n\n  changeItemWidth = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ itemWidth: +event.target.value });\n  };\n\n  changeFrameSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ frameSize: +event.target.value });\n  };\n\n  changeStep = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ step: +event.target.value });\n  };\n\n  changeAnimationDuration = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ animationDuration: +event.target.value });\n  };\n\n  render() {\n    const { images } = this.props;\n\n    const {\n      itemWidth,\n      frameSize,\n      initPosition,\n      animationDuration,\n      step,\n      disabledNext,\n      disabledPrev,\n    } = this.state;\n\n    return (\n      <div className=\"Carousel\">\n        <div className=\"Carousel_window\">\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translateX(-${initPosition}px)`,\n              transition: `${animationDuration}ms`,\n              width: `${frameSize * itemWidth}px`,\n            }}\n          >\n            {images.map(image => (\n              <li key={image}>\n                <img\n                  src={image}\n                  alt={`emotion-${images.indexOf(image)}`}\n                  width={itemWidth}\n                  height={itemWidth}\n                />\n              </li>\n            ))}\n          </ul>\n          <div className=\"Carousel_controls\">\n            <button\n              className=\"Carousel_btn\"\n              type=\"button\"\n              onClick={this.moveRight}\n              disabled={disabledPrev}\n            >\n              Prev\n            </button>\n            <button\n              className=\"Carousel_btn\"\n              type=\"button\"\n              onClick={this.moveLeft}\n              disabled={disabledNext}\n              data-cy=\"next\"\n            >\n              Next\n            </button>\n          </div>\n        </div>\n        <div className=\"Carousel_options\">\n          <label htmlFor=\"itemId\" className=\"Carousel_label\">\n            Item Width:\n            <input\n              className=\"Carousel_input\"\n              type=\"number\"\n              id=\"itemId\"\n              name=\"input_width\"\n              onChange={this.changeItemWidth}\n              value={itemWidth}\n              min={130}\n            />\n          </label>\n          <label htmlFor=\"frameId\" className=\"Carousel_label\">\n            Frame Size:\n            <input\n              className=\"Carousel_input\"\n              type=\"number\"\n              id=\"frameId\"\n              onChange={this.changeFrameSize}\n              value={frameSize}\n              min={1}\n            />\n          </label>\n          <label htmlFor=\"stepId\" className=\"Carousel_label\">\n            Step:\n            <input\n              className=\"Carousel_input\"\n              type=\"number\"\n              id=\"stepId\"\n              onChange={this.changeStep}\n              value={step}\n              min={1}\n            />\n          </label>\n          <label htmlFor=\"input_size\" className=\"Carousel_label\">\n            Animation Duration:\n            <input\n              className=\"Carousel_input\"\n              type=\"number\"\n              id=\"input_animation\"\n              onChange={this.changeAnimationDuration}\n              value={animationDuration}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 className=\"Carousel_title\" data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel images={images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}